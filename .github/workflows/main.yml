name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

env:
  BUILD_TYPE: poetry311
  TERRAFORM_TEMPLATES_DIR: terraform
  TERRAFORM_BACKEND: s3
  TERRAFORM_AUTH_TYPE: AWS
  PIPELINE_VERSION: v6
  BUILD_OUTPUT_DIR: "./out"
  
  # IDENTITY
  APP_ID: APP09759
  APP_NAME: GitHub Cloud Deployment Module
  
  # DEPLOYMENT
  CLOUD_ACCOUNT_ID_NONPROD: 396816018484
  CLOUD_ACCOUNT_ID_PROD: 929021032636
  
  # RELEASES
  RELEASE_BRANCH: main
  DEV_BRANCH: moon
  
  # SERVICENOW
  SNAPI_PROD_USER: public.prod.user
  SNAPI_ASSIGNMENT_GROUP: Cloud Engineering - ISS
  SNAPI_RISK: 4
  
  # ARTIFACTORY
  COMMON_IMAGE: artifactory.nordstrom.com/docker/cic/omnibus_buildtime_v3:1.3.35
  VULN_SCANNER_IMAGE: artifactory.nordstrom.com/docker/app00651/common/trivy-base:5840868
  
  # TERRAFORM
  TERRAFORM_BACKEND_S3_BUCKET_NONPROD: cdm-cicd-moon
  TERRAFORM_BACKEND_S3_BUCKET_PROD: cdm-cicd-prod
  AUTO_NONPROD_DEPLOY: "false"

jobs:
  dependency-scan:
    name: Dependency Scan
    runs-on: ubuntu-latest
    container:
      image: artifactory.nordstrom.com/docker/app00651/common/trivy-base:5840868
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy scan
        run: |
          trivy fs . --security-checks vuln --exit-code 1 --severity MEDIUM,HIGH,CRITICAL \
            --skip-dirs ./.cicd --ignore-unfixed

  terraform-plan-nonprod-dev-branch:
    name: Terraform Plan (NonProd Dev Branch)
    runs-on: ubuntu-latest
    container:
      image: artifactory.nordstrom.com/docker/cic/omnibus_buildtime_v3:1.3.35
    if: github.ref_name != 'main'
    needs: dependency-scan
    strategy:
      matrix:
        include:
          - environment: ${{ github.ref_name }}
            state_name: dev-${{ github.ref_name }}-tf
    env:
      TF_VAR_environment: ${{ matrix.environment }}
      TERRAFORM_STATE_NAME: ${{ matrix.state_name }}
      TERRAFORM_BACKEND_S3_KEYNAME: terraform/cdm-sm/${{ github.ref_name }}/resources.tfstate
      AWS_ACCOUNT_ID: 396816018484
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_NONPROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_NONPROD }}
          aws-region: us-west-2
      
      - name: Terraform Init
        working-directory: ./terraform
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TERRAFORM_BACKEND_S3_BUCKET_NONPROD }}" \
            -backend-config="key=${{ env.TERRAFORM_BACKEND_S3_KEYNAME }}" \
            -backend-config="region=us-west-2"
      
      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file=./variables/nonprod.tfvars

  terraform-apply-nonprod-dev-branch:
    name: Terraform Apply (NonProd Dev Branch)
    runs-on: ubuntu-latest
    container:
      image: artifactory.nordstrom.com/docker/cic/omnibus_buildtime_v3:1.3.35
    if: github.ref_name != 'main'
    needs: terraform-plan-nonprod-dev-branch
    environment: nonprod-dev
    strategy:
      matrix:
        include:
          - environment: ${{ github.ref_name }}
            state_name: dev-${{ github.ref_name }}-tf
    env:
      TF_VAR_environment: ${{ matrix.environment }}
      TERRAFORM_STATE_NAME: ${{ matrix.state_name }}
      TERRAFORM_BACKEND_S3_KEYNAME: terraform/cdm-sm/${{ github.ref_name }}/resources.tfstate
      AWS_ACCOUNT_ID: 396816018484
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_NONPROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_NONPROD }}
          aws-region: us-west-2
      
      - name: Terraform Init
        working-directory: ./terraform
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TERRAFORM_BACKEND_S3_BUCKET_NONPROD }}" \
            -backend-config="key=${{ env.TERRAFORM_BACKEND_S3_KEYNAME }}" \
            -backend-config="region=us-west-2"
      
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var-file=./variables/nonprod.tfvars

  terraform-plan-prod:
    name: Terraform Plan (Prod)
    runs-on: ubuntu-latest
    container:
      image: artifactory.nordstrom.com/docker/cic/omnibus_buildtime_v3:1.3.35
    if: github.ref_name == 'main'
    needs: dependency-scan
    strategy:
      matrix:
        include:
          - state_name: prod-tf
    env:
      TERRAFORM_STATE_NAME: ${{ matrix.state_name }}
      TERRAFORM_BACKEND_S3_KEYNAME: terraform/cdm-sm/main/resources.tfstate
      AWS_ACCOUNT_ID: 929021032636
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-west-2
      
      - name: Terraform Init
        working-directory: ./terraform
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TERRAFORM_BACKEND_S3_BUCKET_PROD }}" \
            -backend-config="key=${{ env.TERRAFORM_BACKEND_S3_KEYNAME }}" \
            -backend-config="region=us-west-2"
      
      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file=./variables/prod.tfvars

  terraform-apply-prod:
    name: Terraform Apply (Prod)
    runs-on: ubuntu-latest
    container:
      image: artifactory.nordstrom.com/docker/cic/omnibus_buildtime_v3:1.3.35
    if: github.ref_name == 'main'
    needs: terraform-plan-prod
    environment: production
    strategy:
      matrix:
        include:
          - state_name: prod-tf
    env:
      TERRAFORM_STATE_NAME: ${{ matrix.state_name }}
      TERRAFORM_BACKEND_S3_KEYNAME: terraform/cdm-sm/main/resources.tfstate
      AWS_ACCOUNT_ID: 929021032636
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-west-2
      
      - name: Terraform Init
        working-directory: ./terraform
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TERRAFORM_BACKEND_S3_BUCKET_PROD }}" \
            -backend-config="key=${{ env.TERRAFORM_BACKEND_S3_KEYNAME }}" \
            -backend-config="region=us-west-2"
      
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var-file=./variables/prod.tfvars